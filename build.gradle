plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
}

group = 'com.test'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

application {
    mainClassName = 'org.home.MainKt'
}

dependencies {
    implementation 'no.tornado:tornadofx:1.7.20'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.0-Beta'
    implementation 'io.insert-koin:koin-core:3.3.3'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = '17'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '17'
}

javafx {
    version = '19'
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
    configuration = 'implementation'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task runServer(type: Exec) {
    dependsOn build
    group = "Execution"
    description = "Run the main class with ExecTask"
    commandLine "java", "-classpath", sourceSets.main.runtimeClasspath.getAsPath(), mainClassName, "server"
}


task runClient(type: Exec) {
    dependsOn build
    group = "Execution"
    description = "Run the main class with ExecTask"
    commandLine "java", "-classpath", sourceSets.main.runtimeClasspath.getAsPath(), mainClassName, "client"
}